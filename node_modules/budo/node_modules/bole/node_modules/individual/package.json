{
  "name": "individual",
  "version": "3.0.0",
  "description": "Garantueed individual values",
  "keywords": [],
  "author": {
    "name": "Raynos",
    "email": "raynos2@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Raynos/individual.git"
  },
  "main": "index",
  "homepage": "https://github.com/Raynos/individual",
  "contributors": [
    {
      "name": "Jake Verbaten"
    }
  ],
  "bugs": {
    "url": "https://github.com/Raynos/individual/issues",
    "email": "raynos2@gmail.com"
  },
  "dependencies": {},
  "devDependencies": {
    "coveralls": "^2.10.0",
    "istanbul": "^0.2.7",
    "run-browser": "^1.3.1",
    "tape": "^2.12.3"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/Raynos/individual/raw/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "node test.js",
    "cover": "istanbul cover --report none --print detail test.js",
    "travis": "npm run cover -s && istanbul report lcov && ((cat coverage/lcov.info | coveralls) || exit 0)"
  },
  "testling": {
    "files": "test.js",
    "browsers": [
      "ie/8..latest",
      "firefox/16..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "readme": "# individual\n\n[![build status][build-png]][build] [![Coverage Status][cover-png]][cover] [![Davis Dependency status][dep-png]][dep]\n\n[![NPM][npm-png]][npm]\n\n[![browser support][test-png]][test]\n\nGarantueed individual values\n\n## Example\n\n```js\nvar Individual = require(\"individual\")\n\nvar moduleCache = Individual(\"__MY_MODULE_CACHE\", {})\n\n// moduleCache is a individual variable local to this file.\n// It will always be the same value and defaults to {}.\n```\n\nThis gives you a singleton value by a unique name (it stores it\nas a global variable).\n\n## Use cases\n\nYour module has an internal cache. If your module is loaded\n    twice, (someone didn't npm dedup and has two copies of your\n    module) you would have two seperate caches that dont talk\n    to each other.\n\nBest case your cache is less efficient. Worst case you have a\n    cache because the native C++ extension you talk to crashes\n    if you instantiate something twice.\n\nYou need a garantuee that this value is an individual, there is\n    only one of it.\n\nI use it myself because opening a SockJS websocket to the same\n    URI twice causes an infinite loop. I need a garantuee that\n    I have an individual value for the SockJS connection so I\n    can see whether I already have an open connection.\n\n## WHY GLOBALS >:(\n\nI can't imagine any other way to do it. I hate it too. Make a\n    pull request if you know the real solution\n\n## Installation\n\n`npm install individual`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [build-png]: https://secure.travis-ci.org/Raynos/individual.png\n  [build]: https://travis-ci.org/Raynos/individual\n  [cover-png]: https://coveralls.io/repos/Raynos/individual/badge.png\n  [cover]: https://coveralls.io/r/Raynos/individual\n  [dep-png]: https://david-dm.org/Raynos/individual.png\n  [dep]: https://david-dm.org/Raynos/individual\n  [test-png]: https://ci.testling.com/Raynos/individual.png\n  [test]: https://ci.testling.com/Raynos/individual\n  [npm-png]: https://nodei.co/npm/individual.png?stars&downloads\n  [npm]: https://nodei.co/npm/individual\n\n",
  "readmeFilename": "README.md",
  "_id": "individual@3.0.0",
  "_from": "individual@>=3.0.0 <3.1.0-0"
}
