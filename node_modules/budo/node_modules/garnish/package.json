{
  "name": "garnish",
  "version": "5.2.0",
  "description": "prettifies ndjson from wzrd and similar tools",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "bin": {
    "garnish": "./bin/cmd.js"
  },
  "dependencies": {
    "chalk": "^0.5.1",
    "minimist": "^1.1.0",
    "pad-left": "^2.0.0",
    "pad-right": "^0.2.2",
    "prettier-bytes": "^1.0.3",
    "pretty-ms": "^2.1.0",
    "right-now": "^1.0.0",
    "split2": "^0.2.1",
    "stdout-stream": "^1.4.0",
    "url-trim": "^1.0.0"
  },
  "devDependencies": {
    "browserify": "^8.1.3",
    "standard": "^4.5.4",
    "strip-ansi": "^2.0.1",
    "tape": "^3.5.0",
    "wzrd": "^1.2.1"
  },
  "scripts": {
    "test": "standard && node test/test.js",
    "wzrd": "wzrd test/demo.js | ./bin/cmd.js",
    "demo": "node test/app.js | ./bin/cmd.js",
    "start": "node test/server.js"
  },
  "keywords": [
    "prettify",
    "pretty",
    "print",
    "pretty-print",
    "ndjson",
    "bundle",
    "bundler",
    "browserify",
    "wzrd",
    "beefy",
    "wizz"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/garnish.git"
  },
  "homepage": "https://github.com/mattdesl/garnish",
  "bugs": {
    "url": "https://github.com/mattdesl/garnish/issues"
  },
  "readme": "# garnish\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nPrettifies [ndjson](http://ndjson.org/) or [bole](https://github.com/rvagg/bole) logs from [budo](https://github.com/mattdesl/budo), [wzrd](https://github.com/maxogden/wzrd/) and other tools. \n\nExample with [budo](https://github.com/mattdesl/budo), which uses this under the hood.\n\n<img src=\"http://i.imgur.com/Pvus8vy.png\" width=\"75%\" />\n\n## Install\n\n```sh\nnpm install garnish [-g|--save-dev]\n```\n\n## Usage\n\n### CLI\n\nPipe a ndjson emitter into `garnish` like so:\n\n```sh\nnode app.js | garnish [opts]\n\nOptions:\n\n    --level, -l    the minimum debug level, default 'debug'\n    --name, -n     the default app name\n```\n\nWhere `level` can be `debug`, `info`, `warn`, `error`.\n\n### API\n\n#### `garnish([opt])`\n\nReturns a duplexer that parses input as ndjson, and writes a pretty-printed result. Options:\n\n- `level` (String)\n  - the minimum log level to print (default `'debug'`)\n  - the order is as follows: `debug`, `info`, `warn`, `error`\n- `name` (String)\n  - the default name for your logger; a message's `name` field will not be printed when it matches this default name, to reduce redundant/obvious information in the logs.\n\n## format\n\nTypically, you would use [bole](https://github.com/rvagg/bole) or [ndjson](https://www.npmjs.com/package/ndjson) to write the content to garnish. You can also write ndjson to `stdout` like so:\n\n```js\n// a log message\nconsole.log({\n  name: 'myApp',\n  level: 'warn',\n  message: 'not found'\n})\n\n// a typical server message\nconsole.log({\n  name: 'myApp',\n  type: 'generated',\n  level: 'info',\n  url: '/foo.png',\n  statusCode: 200,\n  contentLength: 12800, // in bytes\n  elapsed: 120 // in milliseconds\n})\n```\n\n\nCurrently garnish styles the following:\n\n- `level`\n  - the log level e.g. `debug`, `info`, `warn`, `error` (default `debug`) - only shown if `message` is present\n- `name`\n  - an optional event or application name. It's recommended to always have a name.\n- `message`\n  - an event message.\n- `url`\n  - a url (stripped to pathname), useful for router logging.\n- `statusCode`\n  - an HTTP statusCode. Codes `>=400` are displayed in red.\n- `contentLength`\n  - the response size; if a `number`, bytes are assumed\n- `elapsed`\n  - time elapsed since the previous related event; if a `number`, milliseconds are assumed\n- `type`\n  - the type of event logged\n- `colors`\n  - an optional color mapping for custom styles\n\nYou can use the `colors` field to override any of the default colors with a new [ANSI style](https://github.com/chalk/ansi-styles).\n\nFor example, the following will print `elapsed` in yellow if it passes our threshold:\n\n```js\nfunction logTime (msg) {\n  var now = Date.now()\n  var time = now - lastTime\n  lastTime = now\n\n  console.log({\n    name: 'app',\n    message: msg,\n    elapsed: time + ' ms',\n    colors: {\n      elapsed: time > 1000 ? 'yellow' : 'green'\n    }\n  })\n}\n```\n\n## See Also\n\n- [bistre](https://github.com/hughsk/bistre)\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/garnish/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "garnish@5.2.0",
  "dist": {
    "shasum": "bed43659382e4b198e33c793897be7c701e65577"
  },
  "_from": "garnish@^5.0.0",
  "_resolved": "https://registry.npmjs.org/garnish/-/garnish-5.2.0.tgz"
}
