{
  "name": "map-limit",
  "description": "async.mapLimit's functionality available as a standalone npm module",
  "version": "0.0.1",
  "main": "index.js",
  "browser": "index.js",
  "dependencies": {
    "once": "~1.3.0"
  },
  "devDependencies": {
    "tape": "~2.4.2"
  },
  "scripts": {
    "test": "node test"
  },
  "author": {
    "name": "Hugh Kennedy",
    "email": "hughskennedy@gmail.com",
    "url": "http://hughsk.io/"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git://github.com/hughsk/map-limit"
  },
  "bugs": {
    "url": "https://github.com/hughsk/map-limit/issues"
  },
  "homepage": "https://github.com/hughsk/map-limit",
  "keywords": [
    "async",
    "map",
    "limit"
  ],
  "readme": "# map-limit [![Flattr this!](https://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=hughskennedy&url=http://github.com/hughsk/map-limit&title=map-limit&description=hughsk/map-limit%20on%20GitHub&language=en_GB&tags=flattr,github,javascript&category=software)[![experimental](http://hughsk.github.io/stability-badges/dist/experimental.svg)](http://github.com/hughsk/stability-badges) #\n\n[async.mapLimit](https://github.com/caolan/async#maplimitarr-limit-iterator-callback)'s\nfunctionality available as a standalone npm module.\n\nI often find myself pulling in [async](http://github.com/caolan/async) for this\nmethod alone, so in the spirit of breaking things into smaller pieces here's\nthat method as a single thing you can require.\n\n## Usage ##\n\n[![map-limit](https://nodei.co/npm/map-limit.png?mini=true)](https://nodei.co/npm/map-limit)\n\n### `mapLimit(arr, limit, iterator, callback)` ###\n\nThe same as map only no more than \"limit\" iterators will be simultaneously\nrunning at any time.\n\nNote that the items are not processed in batches, so there is no guarantee\nthat the first \"limit\" iterator functions will complete before any others are\nstarted.\n\n#### Arguments ####\n\n* **arr** - An array to iterate over.\n* **limit** - The maximum number of iterators to run at any time.\n* **iterator(item, callback)** - A function to apply to each item in the array. The iterator is passed a callback(err, transformed) which must be called once it has completed with an error (which can be null) and a transformed item.\n* **callback(err, results)** - A callback which is called after all the iterator functions have finished, or an error has occurred. Results is an array of the transformed items from the original array.\n\n## License ##\n\nMIT. See [LICENSE.md](http://github.com/hughsk/map-limit/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "map-limit@0.0.1",
  "dist": {
    "shasum": "eb7961031c0f0e8d001bf2d56fab685d58822f38"
  },
  "_from": "map-limit@0.0.1",
  "_resolved": "https://registry.npmjs.org/map-limit/-/map-limit-0.0.1.tgz"
}
