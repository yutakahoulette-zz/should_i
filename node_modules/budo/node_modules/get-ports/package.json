{
  "name": "get-ports",
  "version": "1.0.3",
  "description": "gets multiple open ports",
  "main": "index.js",
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "map-limit": "0.0.1"
  },
  "devDependencies": {
    "faucet": "0.0.1",
    "standard": "^5.3.1",
    "tape": "^4.2.1"
  },
  "scripts": {
    "test": "standard && node test.js | faucet"
  },
  "keywords": [
    "get",
    "port",
    "find",
    "portfind",
    "finding",
    "finds",
    "gets",
    "portfinding",
    "portfinder",
    "multiple"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/Jam3/get-ports.git"
  },
  "homepage": "https://github.com/Jam3/get-ports",
  "bugs": {
    "url": "https://github.com/Jam3/get-ports/issues"
  },
  "readme": "# get-ports\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nFinds multiple open ports after your specified base ports, and below the max range. \n\nUnlike [getport](https://github.com/mikeal/getport) or [get-port](https://github.com/sindresorhus/get-port), this is useful for situations where you need multiple servers to run on open ports.\n\nIf not all ports could be found, the error callback is triggered.\n\n## Install\n\n```sh\nnpm install get-ports --save\n```\n\n## Example\n\nThe resulting `ports` array is parallel to your input (base) ports.\n\nFor example, if port `8000` and `9966` are already in use:\n\n```js\nvar getPorts = require('get-ports')\n\ngetPorts([ 8000, 9966 ], function (err, ports) {\n  if (err) throw new Error('could not open servers')\n  \n  console.log(ports)\n  //=> [ 8001, 9967 ]\n})\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/get-ports.png)](https://www.npmjs.com/package/get-ports)\n\n#### `getPorts(basePorts, [maxPort], callback)`\n\nFor the given array of `basePorts`, tries to find the next available port from each one. This keeps track of available ports to ensure there are no conflicts in the final result.\n\nIf the finite number `maxPort` is specified, the portfinding will fail when it reaches that maximum port. Defaults to 60000.\n\nThe callback is called with `(err, ports)`, where `err` will be an Error if any of the portfindings failed (i.e. no open ports within range). If successful, `err` will be null and `ports` will be an array, parallel to `basePorts`, with the found port numbers.\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/Jam3/get-ports/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "_id": "get-ports@1.0.3",
  "dist": {
    "shasum": "f40bd580aca7ec0efb7b96cbfcbeb03ef894b5e8"
  },
  "_from": "get-ports@^1.0.2",
  "_resolved": "https://registry.npmjs.org/get-ports/-/get-ports-1.0.3.tgz"
}
