{
  "name": "budo",
  "version": "8.2.1",
  "description": "a browserify server for rapid prototyping",
  "main": "index.js",
  "bin": {
    "budo": "./bin/cmd.js"
  },
  "license": "MIT",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "https://github.com/mattdesl"
  },
  "dependencies": {
    "bole": "^2.0.0",
    "browserify": "^12.0.1",
    "chokidar": "^1.0.1",
    "connect-pushstate": "^1.0.0",
    "events": "^1.0.2",
    "garnish": "^5.0.0",
    "get-ports": "^1.0.2",
    "inject-lr-script": "^2.0.0",
    "internal-ip": "^1.0.1",
    "micromatch": "^2.2.0",
    "minimist": "^1.1.0",
    "once": "^1.3.2",
    "opn": "^3.0.2",
    "resolve": "^1.1.6",
    "resp-modifier": "^6.0.0",
    "serve-static": "^1.10.0",
    "simple-html-index": "^1.1.0",
    "stacked": "^1.1.1",
    "stdout-stream": "^1.4.0",
    "strip-ansi": "^3.0.0",
    "term-color": "^1.0.1",
    "tiny-lr": "^0.2.0",
    "url-trim": "^1.0.0",
    "watchify-middleware": "^1.6.0",
    "xtend": "^4.0.0"
  },
  "devDependencies": {
    "2d-context": "^1.2.0",
    "babelify": "^6.3.0",
    "brfs": "^1.4.0",
    "canvas-loop": "^1.0.4",
    "ndjson": "^1.4.1",
    "request": "^2.53.0",
    "standard": "^5.2.1",
    "tap-spec": "^4.1.0",
    "tape": "^4.0.0",
    "through2": "^2.0.0",
    "tree-kill": "^1.0.0",
    "win-spawn": "^2.0.0"
  },
  "scripts": {
    "test": "standard && tape test/test*.js | tap-spec",
    "start": "./bin/cmd.js example/app.js:bundle.js -v --dir example -- -t babelify",
    "pushstate": "./bin/cmd.js example/app.js:bundle.js -v --dir example --live --pushstate -- -t babelify",
    "live": "./bin/cmd.js example/app.js:bundle.js --dir example --verbose --live -- -t babelify"
  },
  "keywords": [
    "browserify",
    "watchify",
    "browser",
    "dev",
    "development",
    "server",
    "beefy",
    "wzrd",
    "local",
    "locally",
    "localhost",
    "watch",
    "live",
    "reload",
    "livereload",
    "lr"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/budo.git"
  },
  "homepage": "https://github.com/mattdesl/budo",
  "bugs": {
    "url": "https://github.com/mattdesl/budo/issues"
  },
  "readme": "# budō\n\n[![build status][travis-image]][travis-url]\n[![stability][stability-image]][stability-url]\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][downloads-url]\n[![js-standard-style][standard-image]][standard-url]\n\nThis is a browserify development server inspired by [beefy](https://github.com/chrisdickinson/beefy) and [wzrd](https://github.com/maxogden/wzrd), but specifically focused on incremental reloading, LiveReload integration (including CSS injection), and other high-level features.\n\nTo install:\n\n```sh\nnpm install budo -g\n```\n\nRunning budo will start a server with a default `index.html` and incrementally bundle your source on filesave. The requests are delayed until the bundle has finished, so you won't be served stale or empty bundles if you refresh the page mid-update. Examples:\n\n```sh\n# serve file on port 9966 and open browser\nbudo index.js --open\n\n# enable LiveReload on HTML/CSS/JS file changes\nbudo index.js --live\n\n# default html will use src=\"static/bundle.js\"\nbudo src/index.js:static/bundle.js\n\n# pass some options to browserify\nbudo index.js --live -- -t babelify\n\n# use HTTPS and enable CORS headers\nbudo index.js --ssl --cors --cert=cert.pem --key=key.pem\n```\n\nThen open [http://localhost:9966/](http://localhost:9966/) to see the content in action.\n\nBy default, budo pretty-prints to terminal with [garnish](https://github.com/mattdesl/garnish).\n\n\n<center><img src=\"http://i.imgur.com/Pvus8vy.png\" width=\"75%\" /></center>\n\nSee [docs](#docs) for more details and integrations, such as [React Hot Module Replacement](./docs/command-line-usage.md#hot-module-replacement). PRs/suggestions/comments welcome.\n\n## features\n\nAt a glance:\n\n- stubs a default `index.html`\n- fast incremental bundling, suspending the response until the new source is ready\n- watches HTML and CSS files for changes; CSS is injected without reloading the page\n- can emit [ndjson](http://ndjson.org) logs to use another pretty-printer, like [bistre](https://github.com/hughsk/bistre).\n- provides clear error messaging during development in DOM and console\n\nBelow is an example of how syntax errors look during development, using the [babelify](https://github.com/babel/babelify) transform.\n\n![babelify](http://i.imgur.com/ZlfJL1i.png)\n\n## docs\n\n- [command line usage](docs/command-line-usage.md)\n- [API usage](docs/api-usage.md)\n- [running tests and examples](docs/tests-and-examples.md)\n- [rapid prototyping with budō](http://mattdesl.svbtle.com/rapid-prototyping)\n- [experimental script injection with budo-chrome](https://github.com/mattdesl/budo-chrome)\n\n## usage\n\n[![NPM](https://nodei.co/npm/budo.png)](https://www.npmjs.com/package/budo)\n\n### CLI\n\nDetails for `budo` command-line interface.\n\n```txt\nUsage:\n  budo index.js [opts] -- [browserify opts]\n\nOptions:\n  --help, -h       show help message\n  --version        show version\n  --port, -p       the port to run, default 9966\n  --host, -H       the host, default internal IP (localhost)\n  --dir, -d        a path, or array of paths for base static content\n  --serve, -s      override the bundle path being served\n  --live, -l       enable default LiveReload integration\n  --live-port, -L  the LiveReload port, default 35729\n  --open, -o       launch the browser once connected\n  --pushstate, -P  always render the index page instead of a 404 page\n  --onupdate       a shell command to trigger on bundle update\n  --poll=N         use polling for file watch, with optional interval N\n  --title          optional title for default index.html\n  --css            optional stylesheet href for default index.html\n  --ssl, -S        create an HTTPS server instead of HTTP\n  --cert, -C       the cert for SSL (default cert.pem)\n  --key, -K        the key for SSL (default key.pem)\n  --cors           set header to use CORS (Access-Control-Allow-Origin: *)\n  --ndjson         print ndjson instead of pretty-printed logs\n  --verbose, -v    also include debug messages\n  --no-stream      do not print messages to stdout\n  --no-debug       do not use inline source maps\n  --no-portfind    will not attempt auto-portfinding\n  --no-error-handler    disable default DOM error handling\n  --watch-glob, --wg    glob(s) to watch for reloads, default '**/*.{html,css}'\n```\n\nBy default, messages will be printed to `process.stdout`, and `--debug` will be sent to browserify (for source maps). You can turn these off with `--no-stream` and `--no-debug`, respectively.\n\nEverything after `--` is passed directly to browserify. Example:\n\n```js\nbudo index.js --live -- -t [ babelify --extensions .es6 ]\n```\n\n### API\n\nThe API mirrors the CLI except it does not write to `process.stdout` by default.\n\n```js\nvar budo = require('budo')\nvar babelify = require('babelify')\n\nbudo('./src/index.js', {\n  live: true,             // setup live reload\n  port: 8000,             // use this port\n  browserify: {\n    transform: babelify   // ES6\n  }\n}).on('connect', function (ev) {\n  console.log('Server running on %s', ev.uri)\n  console.log('LiveReload running on port %s', ev.livePort)\n}).on('update', function (buffer) {\n  console.log('bundle - %d bytes', buffer.length)\n})\n```\n\nSee [API usage](docs/api-usage.md) for details.\n\n## See Also\n\nbudō combines several smaller and less opinionated modules.\n\n- [watchify-middleware](https://www.npmjs.com/package/watchify-middleware) - the underlying request handler for serving incremental reloads\n- [watchify-server](https://www.npmjs.com/package/watchify-server) - a less opinionated alternative to budo, built on the same underlying modules\n- [simple-html-index](https://www.npmjs.com/package/simple-html-index) - a stream for a default `index.html` file\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/mattdesl/budo/blob/master/LICENSE.md) for details.\n\n[stability-image]: https://img.shields.io/badge/stability-stable-brightgreen.svg?style=flat-square\n[stability-url]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[npm-image]: https://img.shields.io/npm/v/budo.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/budo\n[travis-image]: https://img.shields.io/travis/mattdesl/budo/master.svg?style=flat-square\n[travis-url]: http://travis-ci.org/mattdesl/budo\n[downloads-image]: http://img.shields.io/npm/dm/budo.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/budo\n[standard-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[standard-url]: https://github.com/feross/standard\n",
  "readmeFilename": "README.md",
  "_id": "budo@8.2.1",
  "dist": {
    "shasum": "285fbd4ec50037ea8ec88471b113fd5f06625598"
  },
  "_from": "budo@",
  "_resolved": "https://registry.npmjs.org/budo/-/budo-8.2.1.tgz"
}
